#Problem 1: Curve Fitting
#15.0/15.0 points (graded)
import numpy as np
def generate_models(x, y, degs):
    """
    Generate regression models by fitting a polynomial for each degree in degs
    to points (x, y).
    Args:
        x: a list with length N, representing the x-coords of N sample points
        y: a list with length N, representing the y-coords of N sample points
        degs: a list of degrees of the fitting polynomial
    Returns:
        a list of numpy arrays, where each array is a 1-d array of coefficients
        that minimizes the squared error of the fitting polynomial
    """
    # TODO
    models = []
    for degree in degs:
        fit = np.polyfit(x,y, degree)
        models.append(fit)
    
    return models

#Problem 2: R^2
#10.0/10.0 points (graded)
def r_squared(y, estimated):
    """
    Calculate the R-squared error term.
    Args:
        y: list with length N, representing the y-coords of N sample points
        estimated: a list of values estimated by the regression model
    Returns:
        a float for the R-squared error term
    """
    # TODO
    mean = sum(y)/len(y)
    denominator,numerator = 0,0
    for i in range(len(y)):
        numerator += (y[i] - estimated[i])**2
        denominator += (y[i] - mean)**2
    return(1-numerator/denominator)
